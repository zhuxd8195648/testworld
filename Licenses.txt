============================================================
======================== Licenses ==========================
============================================================

RimWorld使用LibNoise.Unity。 LibNoise最初是由Jason Bevins创建的。 这个库后来由Marc André Ueberall移植到Xna，由Tim Speltz移植到Unity。 它是在GNU Lesser General Public License下授权的。 请参阅(http://www.gnu.org/licenses)获取完整的许可证。 完整的图书馆可在(https://github.com/ricardojmendez/LibNoise.Unity)找到。 请参阅下面的完整许可。 
 
免费声音来自:  
    Research bubbling: Glaneur de sons
    Click: TicTacShutUp
    Shovel hits: shall555
    Pick hits: cameronmusic
    Building placement: joedeshon and HazMatt
    Flesh impacts: harri
    Food drop: JustinBW
    Nutrient paste dispenser: raywilson
    Weapon handling: S_Dij, KNO_SFX
    Corpse drop: CosmicEmbers and Sauron974
    Growing done pop: yottasounds
    Flame burst: JoelAudio (Joel Azzopardi)
    Interface pops: Volterock, patchen, broumbroum
    Melee miss: yuval
    Construction drill A: cmusounddesign
    Construction drill B: AGFX
    Construction ratchet: gelo_papas
    Construction rummaging: D W
    Urgent letter alarm: JarAxe

===================================
正式执照: LibNoise.Unity (LGPL)
===================================

Gnu较小的通用公共许可证  
版本3,2007年6月29日  

 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.


  这个版本的GNU Lesser General Public License合并了  
GNU通用公众第三版的条款和条件  
许可，由下面列出的附加许可补充。  

  0. 额外的定义。

  在此使用时，“本授权”指的是GNU Lesser的第3版  
通用公共许可证，“GNU GPL”指的是GNU的第三版  
通用公共许可证。  

  “图书馆”指的是受本授权管理的覆盖程序，  
应用程序或以下定义的组合作品除外。  

  “应用程序”是任何使用所提供的接口的工作  
由图书馆，但它不是基于图书馆。  
定义标准库定义的类的子类被视为模式  
使用库提供的接口。  

 “组合作品”是通过组合或连接作品而产生的作品  
应用程序与图书馆。 该库的特定版本  
联合作品也被称为“关联”  
版本”。  

  组合作品的“最小对应源”是指  
对应的源代码为组合工作，不包括任何源代码  
对于合并工作中单独考虑的部分而言  
基于应用程序，而不是链接版本。  

  组合作品的“相应申请代码”是指  
应用程序的目标代码和/或源代码，包括任何数据  
和实用程序，用于从  
应用程序，但不包括系统库的组合工作。

  1. GNU GPL第3节的例外。

  您可以在本授权的第3和第4节下发布覆盖程序  
不受GNU GPL第3条的约束。  

  2. 输送修改版本。

  如果您修改了库的副本，并且在修改中，有  
facility指由应用程序提供的函数或数据  
方法时使用该工具(而不是作为传递的参数)  
调用Facility)，然后您可以传递修改后的副本  
版本:  

   a)在本授权下，只要您作出真诚的努力  
确保在应用程序没有提供  
函数或数据时，该工具仍然运行和执行  
不管它的目的是什么，还是  

  b)在GNU GPL下，没有任何额外的许可  
本授权适用于该副本。  

  3. 从库头文件合并材料的目标代码。  

 应用程序的目标代码形式可以包含来自  
作为库的一部分的头文件。 你可以传达这样的目标  
根据阁下选择的条款制定本守则，但如本公司  
材料不限于数值参数、数据结构  
布局和访问器，或小宏，内联函数和模板  
(长度不超过10行)，你可以做以下两件事:  

  在目标代码的每一个副本中都给出明显的通知  
库是在它中使用的，库和它的使用是  
本授权所涵盖的。  

   b)将目标代码与一份GNU GPL和本许可证的副本一起附上  
文档。  

  4. 结合作品。

  您可以在您选择的条件下发布一个组合作品，  
综合起来，有效地不限制修改  
组合工作和反向中包含的部分库  
工程上对此类修改进行调试，如果还做每一项  
以下几点:  

   a)在每份联合作品的副本中突出说明  
图书馆在其中使用，图书馆和它的使用是  
本授权所涵盖的。

   b)将组合作品与一份GNU GPL和本授权的副本一起使用  
文档。  

   c)对于在期间显示版权声明的组合作品  
其中包括图书馆的版权声明  
这些通知，以及指向用户的引用  
GNU GPL和本授权文件的副本。 

   d)做下列任何一项:

       0)在此条件下传递最小对应源  
许可证，以及相应的申请代码的形式  
适合，并在允许的条件下，用户  
的修改版本重新组合或重新链接应用程序  
的链接版本生成修改后的组合作品  
GNU GPL第6节规定的传递方式  
相应的来源。  

       1)使用合适的共享库机制与  
图书馆。 合适的机制是(A)在运行时使用的机制  
该图书馆的副本已已存在于用户的计算机上  
系统，并且(b)将在修改后的版本下正常运行  
的库的接口兼容的链接  
的版本。  

   e)提供安装信息，但仅在您不愿意的情况下  
须根据本条例第6条提供有关资料  
GNU GPL，并且仅限于此类信息的范围  
文件的修改版本需要安装和执行  
通过重新组合或连接而产生的作品  
具有链接版本的修改版本的应用程序。 (如果  
如果使用选项4d0，则必须附带安装信息  
最小对应源和对应应用  
代码。 如果使用选项4d1，则必须提供Installation  
以GNU GPL第6节规定的方式提供信息  
用于输送相应源。)  

 5. 结合库。

  你可以放置图书馆设施是基于工作  
图书馆并排在一个单独的图书馆与其他图书馆  
不属于申请，不包括在此范围内的设施  
许可，并在您的条款下发布这样的组合库  
选择，如果你同时做以下两件事:  

   a)在合并后的库中附带一份基于同一作品的副本  
，与任何其他图书馆设施分开，  
在本授权条款下传达的。  

  b)对合并库的那一部分给予突出的通知  
是一个基于图书馆的作品，并解释了在哪里可以找到  
伴随同一作品的未合并形式。  

  6.  GNU Lesser General Public License的修订版本。  

  自由软件基金会可以发布修订版和/或新版本  
GNU小通用公共许可证的一部分。 这样的新  
版本将在精神上与当前版本相似，但可能  
在细节上有所不同，以解决新的问题或关注点。  

  每个版本都有一个不同的版本号。 如果  
当您收到库时，它指定了某个编号的版本  
GNU次要通用公共许可证“或任何更新版本”  
适用于它，你可以选择遵守条款  
该发布版本或任何更新版本的条件  
由自由软件基金会发布。 如果图书馆像你一样  
没有指定GNU Lesser的版本号  
通用公共许可证，您可以选择GNU Lesser的任何版本  
由自由软件基金会发布的通用公共许可证。  

 如果您收到的Library指定一个代理可以决定  
GNU较小通用公共许可证的未来版本是否应  
申请时，该代理接受任何版本的公开声明是  
的永久授权，让您选择该版本  
图书馆。  